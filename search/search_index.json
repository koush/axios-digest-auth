{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p><code>@mhoc/axios-digest-auth</code> is a NodeJS library which implements HTTP digest authentication in a  manner which should be familiar to any project which also uses Axios.</p> <p>This library is not affiliated with the Axios project or its maintainers, other than its  input/output data structures being identical to those Axios uses, and it relying on Axios.</p>"},{"location":"#installation","title":"Installation","text":"<pre><code>$ npm i @mhoc/axios-digest-auth\n</code></pre>"},{"location":"#essential-usage","title":"Essential Usage","text":"<pre><code>import AxiosDigestAuth from '@mhoc/axios-digest-auth';\n\nconst digestAuth = new AxiosDigestAuth({\n  username: process.env.MY_DIGEST_USERNAME,\n  password: process.env.MY_DIGEST_PASSWORD,\n});\n\nconst MakeARequest = async () =&gt; {\n  const response = await digestAuth.request({\n    headers: { Accept: \"application/json\" },\n    method: \"GET\",\n    url: \"https://cloud.mongodb.com/api/atlas/v1.0/groups\",\n  });\n}\n</code></pre>"},{"location":"api/","title":"API","text":""},{"location":"api/#class-axiosdigestauth","title":"<code>class AxiosDigestAuth</code>","text":"<pre><code>import AxiosDigestAuth from \"@mhoc/axios-digest-auth\";\n</code></pre> <p>Application-facing class which stores username/password state and executes requests.</p>"},{"location":"api/#new-axiosdigestauth","title":"<code>new AxiosDigestAuth()</code>","text":"<pre><code>const options: AxiosDigestAuthOpts = {\n  axios,\n  password,\n  username,\n};\nconst axiosDigestAuthInst = new AxiosDigestAuth(options);\n</code></pre> <ul> <li>=&gt; <code>AxiosDigestAuthOpts</code>: input object (see below)</li> </ul>"},{"location":"api/#request","title":"<code>request()</code>","text":"<pre><code>import * as axios from \"axios\";\n// you dont have to import this or add it to your package.json.\n// just using it to outline where these types are coming from.\n\nconst ExecuteMyRequest = async () =&gt; {\n  const requestOptions: axios.AxiosRequestConfig = {\n    headers: { Accept: \"application/json\" },\n    method: \"GET\",\n    url: \"https://cloud.mongodb.com/api/atlas/v1.0/groups\",\n  };\n  const response: axios.AxiosResponse = await axiosDigestAuthInst.request(requestOptions);\n};\n</code></pre> <p>Executes a request. The signature of this function is identical to Axios's own <code>request</code> method.</p> <ul> <li> <p>=&gt; <code>axios.AxiosRequestConfig</code>: refer to the Axios documentation for more information on this type.</p> </li> <li> <p>&lt;= <code>axios.AxiosResponse</code>: refer to the Axios documentation for more information on this type.</p> </li> </ul>"},{"location":"api/#interface-axiosdigestauthopts","title":"<code>interface AxiosDigestAuthOpts</code>","text":"<pre><code>import { AxiosDigestAuthOpts } from \"@mhoc/axios-digest-auth\";\n</code></pre> <ul> <li> <p><code>axios</code> (<code>axios.Axios | undefined</code>): Optionally provide an axios object with which requests are made. If this is not provided, <code>axios-digest-auth</code> will create one for you by simply using the <code>axios</code> library default export, with no configuration.</p> </li> <li> <p><code>password</code> (<code>string</code>): the HTTP digest authentication password to use.</p> </li> <li> <p><code>username</code> (<code>string</code>): the HTTP digest authentication username to use.</p> </li> </ul>"}]}